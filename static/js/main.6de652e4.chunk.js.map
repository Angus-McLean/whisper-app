{"version":3,"sources":["components/LandingPage.js","components/MessageText.js","components/MessagesList.js","components/ReactMicComp.js","components/ChatInputs.js","components/ChatRoom.js","components/MainJitsi.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","props","joinMeeting","e","a","preventDefault","console","log","goToMeeting","document","getElementById","value","className","id","onSubmit","this","name","data-name","type","maxLength","placeholder","defaultValue","data-wait","Component","MessageText","msgObj","message","sent","uid","window","GLOBAL","meeting","userId","style","margin","controls","src","text","marginTop","createdAt","toDate","toLocaleString","MessagesList","bottomRef","React","createRef","messages","setTimeout","current","scrollIntoView","behavior","overflow","height","reverse","map","msg","key","ref","ReactMicComp","startRecording","setState","record","stopRecording","self","state","recordedBlob","saveToFirebase","blobObj","storageRef","child","stopTime","put","blob","contentType","then","resp","getDownloadURL","downloadUrl","messagesRef","add","firebase","firestore","FieldValue","serverTimestamp","width","mimeType","onStop","bind","autoGainControl","strokeColor","backgroundColor","ChatInputs","sendMessage","inputValue","inputType","audioRecRef","onChange","target","aria-describedby","background","border","color","onClick","alert","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ChatRoom","collection","storage","query","orderBy","limit","useCollectionData","idField","JitsiMeetExternalAPI","MAINVIDEOLOADED","MainJitsi","api","roomName","meetingId","parentNode","userInfo","displayName","configOverwrite","prejoinPageEnabled","App","page","meetingObj","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"6UA+CeA,E,kDA3CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,YALmB,uCAKL,WAAOC,GAAP,SAAAC,EAAA,sDACVD,EAAEE,iBACFC,QAAQC,IAAI,0BAA0BJ,GAEtC,EAAKF,MAAMO,YAAY,CACnB,UAAYC,SAASC,eAAe,gBAAgBC,MACpD,OAASF,SAASC,eAAe,aAAaC,QANxC,2CALK,sDAEf,EAAKV,MAAQA,EAFE,E,qDAgBf,OACI,yBAAKW,UAAU,mBACX,yBAAKA,UAAU,wBAAf,wBACA,yBAAKA,UAAU,wBAAf,sDACA,yBAAKA,UAAU,6BACX,0BAAMC,GAAG,aAAaC,SAAUC,KAAKb,YAAac,KAAK,aAAaC,YAAU,aAAaL,UAAU,gBACjG,2BAAOM,KAAK,OACRN,UAAU,6BAA6BO,UAAU,MAAMH,KAAK,OAAOC,YAAU,OAAOG,YAAY,eAChGP,GAAG,eAAeQ,aAAa,8BACnC,2BAAOH,KAAK,OACRN,UAAU,6BAA6BO,UAAU,MAAMH,KAAK,OAAOC,YAAU,OAAOG,YAAY,cAChGP,GAAG,YAAYQ,aAAa,aAChC,2BAAOH,KAAK,SAASP,MAAM,eAAeW,YAAU,iBAChDV,UAAU,oCAElB,yBAAKA,UAAU,uBACX,+EAEJ,yBAAKA,UAAU,uBACX,6F,GArCEW,a,kDC4CXC,E,kDA1CX,WAAYvB,GAAO,uCACTA,G,qDAKN,IAAIwB,EAASV,KAAKd,MAAMyB,QAEpBC,EAAOF,EAAOG,MAAQC,OAAOC,OAAOC,QAAQC,OAEhD,MAAoB,cAAhBP,EAAOP,KAEH,yBAAKN,UAAW,iBAAmBe,EAAO,GAAK,aAC3C,6BACI,yBAAKf,UAAW,iBAAmBe,EAAO,GAAK,aAC3C,gCACI,2BAAOM,MAAO,CAAEC,OAAQ,qBAAuBC,UAAQ,EAACC,IAAKX,EAAOY,SAG5E,yBAAKJ,MAAO,CAAEK,UAAW,UACpBb,EAAOG,IADZ,OACqBH,EAAOc,WAAad,EAAOc,UAAUC,SAASC,oBAQ/E,yBAAK7B,UAAW,iBAAkBe,EAAO,GAAK,aAC1C,6BACA,yBAAKf,UAAW,iBAAkBe,EAAO,GAAK,aAC1C,yBAAKf,UAAU,gBAAgBa,EAAOY,OAE1C,yBAAKJ,MAAO,CAAEK,UAAW,SACpBb,EAAOG,IADZ,OACqBH,EAAOc,WAAad,EAAOc,UAAUC,SAASC,wB,GApCzDlB,aC6BXmB,E,kDAzBX,WAAYzC,GAAO,IAAD,8BACd,cAAMA,IACD0C,UAAYC,IAAMC,YAFT,E,qDAIR,IAAD,OAQL,OAPAvC,QAAQC,IAAI,eAAgBQ,KAAKd,MAAM6C,UAEvCC,YAAW,WACPzC,QAAQC,IAAI,EAAKoC,WACjB,EAAKA,UAAUK,SAAW,EAAKL,UAAUK,QAAQC,eAAe,CAAEC,SAAU,aAC7E,KAGC,yBAAKjB,MAAO,CAAEkB,SAAU,SAAUC,OAAQ,SAElCrC,KAAKd,MAAM6C,UAAY/B,KAAKd,MAAM6C,SAASO,UAAUC,KAAI,SAAAC,GAAG,OACxD,kBAAC,EAAD,CAAaC,IAAKD,EAAI1C,GAAIa,QAAS6B,OAG3C,0BAAME,IAAK1C,KAAK4B,iB,GArBLpB,a,gBCCNmC,E,kDACjB,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAQV0D,eAAiB,WACb,EAAKC,SAAS,CAAEC,QAAQ,KAVT,EAanBC,cAAgB,WACZ,IAAIC,EAAI,eACRA,EAAKH,SAAS,CAAEC,QAAQ,IACxBd,YAAW,kBAAIgB,EAAKH,SAAS,CAAEC,QAAQ,MAAU,MAdjD,EAAKG,MAAQ,CACTH,QAAQ,GAEZvD,QAAQC,IAAImD,EAAZ,gBACK,EAAKM,MAAMH,QAAUd,YAAW,kBAAI,EAAKY,mBAAkB,GANjD,E,mDAmBZM,GACH3D,QAAQC,IAAI,+BAAgC0D,K,6BAGzCA,GACH3D,QAAQC,IAAI,oBAAqB0D,EAAclD,MAC/CA,KAAKmD,eAAeD,K,qCAGTE,GACX,IAAIJ,EAAOhD,KAELa,EAAMb,KAAKd,MAAM8B,QAAQC,OAE/B,OAAO+B,EAAK9D,MAAMmE,WAAWC,MAAM,WAAWzC,EAAI,IAAIuC,EAAQG,SAAS,QAAQC,IAAIJ,EAAQK,KAAM,CAC7FC,YAAa,cACdC,MAAK,SAACC,GACLA,EAAKlB,IAAImB,iBAAiBF,MAAK,SAAAG,GAC3BvE,QAAQC,IAAI,uBAAwBoE,GACpCZ,EAAK9D,MAAM6E,YAAYC,IAAI,CACvB1C,KAAMwC,EACN3D,KAAM,YACNqB,UAAWyC,IAASC,UAAUC,WAAWC,kBACzCvD,gB,+BASZ,OACI,yBAAKK,MAAO,CAAEmD,MAAO,OAAQhC,OAAQ,SACjC,kBAAC,WAAD,CACIS,OAAQ9C,KAAKiD,MAAMH,OACnBjD,UAAU,aACVyE,SAAS,aACTC,OAAQvE,KAAKuE,OAAOC,KAAKxE,MACzByE,iBAAiB,EACjBC,YAAY,UACZL,MAAM,MACNM,gBAAgB,iB,GA9DM9C,IAAMrB,WC0EjCoE,E,kDAxEX,WAAY1F,GAAO,IAAD,8BACd,cAAMA,IAQV2F,YATkB,uCASJ,WAAOzF,GAAP,eAAAC,EAAA,yDAEoB,KAA1B,EAAK4D,MAAM6B,WAFL,wDAIV1F,EAAEE,iBAEIuB,EAAM,EAAK3B,MAAM8B,QAAQC,OANrB,SAQJ,EAAK/B,MAAM6E,YAAYC,IAAI,CAC7B7D,KAAM,OACNmB,KAAM,EAAK2B,MAAM6B,WACjBtD,UAAWyC,IAASC,UAAUC,WAAWC,kBACzCvD,QAZM,OAgBV,EAAKoC,MAAM6B,WAAa,GAhBd,2CATI,sDAEd,EAAK7B,MAAQ,CACT8B,UAAY,OACZD,WAAa,IAEjB,EAAKE,YAAcnD,IAAMC,YANX,E,qDA8Bd,IACqC,EADjCkB,EAAOhD,KACX,MAA6B,SAAzBA,KAAKiD,MAAM8B,UACH,oCACJ,0BAAMhF,SAAUC,KAAK6E,YAAahF,UAAU,eACxC,8BAAOA,UAAU,eAAeM,KAAK,OAAOP,MAAOI,KAAKiD,MAAM6B,WAC1DG,SAAU,SAAC7F,GAAD,OAAO4D,EAAKH,SAAS,CAACiC,WAAa1F,EAAE8F,OAAOtF,SACtDS,YAAY,eAAe8E,mBAAiB,iBAFhD,0BAGc,iDAHd,sBAIW,CACHC,WAAY,cACZf,MAAO,OACPgB,OAAQ,OACRC,MAAO,OACPjD,OAAQ,gBAThB,IAYA,yBAAKxC,UAAU,eACX,yBAAKA,UAAU,cAAc0F,QAASvF,KAAK6E,aAAa,uBAAGhF,UAAU,gBACrE,yBAAKA,UAAU,cAAc0F,QAAS,kBAAIC,MAAM,0BAAyB,uBAAG3F,UAAU,iBACtF,yBAAKA,UAAU,cAAc0F,QAAS,WAClCvC,EAAKH,SAAS,CAACkC,UAAU,aAC1B,uBAAGlF,UAAU,uBAII,WAAzBG,KAAKiD,MAAM8B,UACV,oCACJ,0BAAMhF,SAAUC,KAAK6E,YAAahF,UAAU,eACxC,kBAAC,EAAD,CAAc6C,IAAK1C,KAAKgF,YAAahE,QAAShB,KAAKd,MAAM8B,QAASqC,WAAYrD,KAAKd,MAAMmE,WAAYU,YAAa/D,KAAKd,MAAM6E,cAC7H,yBAAKlE,UAAU,eACX,yBAAKA,UAAU,cAAc0F,QAAS,WAClChG,QAAQC,IAAIwD,EAAKgC,aAAehC,EAAKgC,YAAY/C,SACjDe,EAAKgC,YAAY/C,QAAQc,gBACzBf,YAAW,WAAKgB,EAAKH,SAAS,CAACkC,UAAU,WAAW,OACrD,uBAAGlF,UAAU,wBATzB,M,GAzDUW,aCUzByD,IAASwB,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB,IAAM/B,EAAYD,IAASC,YAC3BpD,OAAOmD,SAAWA,IAiDHiC,MA9Cf,SAAkBhH,GACd,IAAM6E,EAAcG,EAAUiC,WAAW,YACnC9C,EAAaY,IAASmC,UAAU1D,MAChC2D,EAAQtC,EAAYuC,QAAQ,YAAa,QAAQC,MAAM,IAHxC,EAKJC,YAAkBH,EAAO,CAAEI,QAAS,OAAhD1E,EALgB,oBASrB,OAHAxC,QAAQC,IAAI,WAAWuC,GAInB,yBAAKlC,UAAU,eACX,6BACI,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cAAf,cACA,yBAAKA,UAAU,mBAAf,eAGR,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,cAAf,oBAGR,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,cAAa,sDAA5B,gBAEJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,cAAf,sBAGR,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,cAAf,kBAKhB,kBAAC,EAAD,CAAckC,SAAUA,IAExB,kBAAC,EAAD,CAAYf,QAAS9B,EAAM8B,QAAS+C,YAAaA,EAAaV,WAAYA,MCrElFqD,EAAuB5F,OAAO4F,sBAAwB,GACtDC,GAAkB,EAiCPC,E,kDA5BX,WAAY1H,GAAO,uCACTA,G,qDAGA,IAAD,OAkBL,OAjBAK,QAAQC,IAAI,YAAaQ,KAAKd,OAE9B8C,YAAW,WACF2E,IACDA,GAAkB,EAClB7F,OAAO+F,IAAM,IAAIH,EAAqB,cAAe,CACjDI,SAAS,EAAK5H,MAAM8B,QAAQ+F,UAC5BC,WAAWtH,SAASC,eAAe,aACnC0E,MAAM,OAAQhC,OAAO,OAAQ4E,SAAU,CAEnCC,YAAa,EAAKhI,MAAM8B,QAAQC,QACjCkG,gBAAiB,CAChBC,oBAAoB,QAGjC,KAGC,yBAAKtH,GAAG,kB,GAzBIU,aC+CT6G,G,wDAxCb,WAAYnI,GAAQ,IAAD,8BACjB,cAAMA,IACD+D,MAAQ,CACXqE,KAAM,QAHS,E,wDAaPC,GACVvH,KAAK6C,SAAS,CAAE7B,QAASuG,IACzBvH,KAAK6C,SAAS,CAAEyE,KAAM,YACtB/H,QAAQC,IAAI,kBAAmB+H,EAAYvH,MAC3Cc,OAAOC,OAASD,OAAOC,QAAU,GACjCD,OAAOC,OAAOC,QAAUuG,I,+BAKxB,OADAhI,QAAQC,IAAI,aAAcQ,MACrBA,KAAKiD,MACc,SAApBjD,KAAKiD,MAAMqE,KACN,kBAAC,EAAD,CAAa7H,YAAaO,KAAKP,YAAY+E,KAAKxE,QAE/C,oCACN,kBAAC,EAAD,CAAUgB,QAAShB,KAAKiD,MAAMjC,UAC9B,yBAAKnB,UAAU,aACb,kBAAC,EAAD,CAAWmB,QAAShB,KAAKiD,MAAMjC,YAPb,yC,GAzBVR,cCAEgH,QACW,cAA7B1G,OAAO2G,SAASC,UAEe,UAA7B5G,OAAO2G,SAASC,UAEhB5G,OAAO2G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpI,SAASC,eAAe,SDyHpB,kBAAmBoI,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9I,QAAQ8I,MAAMA,EAAM1H,c","file":"static/js/main.6de652e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass LandingPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.props = props    \n    }\n\n    joinMeeting = async (e) => {\n        e.preventDefault();\n        console.log('LandingPage.joinMeeting',e)\n\n        this.props.goToMeeting({\n            'meetingId':document.getElementById('meetingField').value,\n            'userId':document.getElementById('userField').value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"landing section\">\n                <div className=\"landing text-block-8\">Join Whisper Meeting</div>\n                <div className=\"landing text-block-9\">Video conferencing like they're right beside you..</div>\n                <div className=\"landing form-block w-form\">\n                    <form id=\"email-form\" onSubmit={this.joinMeeting} name=\"email-form\" data-name=\"Email Form\" className=\"landing form\">\n                        <input type=\"text\"\n                            className=\"landing text-field w-input\" maxLength=\"256\" name=\"name\" data-name=\"Name\" placeholder=\"Meeting ID..\"\n                            id=\"meetingField\" defaultValue=\"WhisperDefaultMeetingRoom\"/>\n                        <input type=\"text\"\n                            className=\"landing text-field w-input\" maxLength=\"256\" name=\"name\" data-name=\"Name\" placeholder=\"Your Name..\"\n                            id=\"userField\" defaultValue=\"John Doe\"/>\n                        <input type=\"submit\" value=\"Join Meeting\" data-wait=\"Please wait...\"\n                            className=\"landing submit-button w-button\" />\n                    </form>\n                    <div className=\"landing w-form-done\">\n                        <div>Thank you! Your submission has been received!</div>\n                    </div>\n                    <div className=\"landing w-form-fail\">\n                        <div>Oops! Something went wrong while submitting the form.</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;\n\n\n\n// Other Helpers \n","import React, {Component} from 'react';\n\nclass MessageText extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        // console.log(this.props.message)\n        var msgObj = this.props.message\n        \n        var sent = msgObj.uid === window.GLOBAL.meeting.userId\n\n        if (msgObj.type === 'recording') {\n            return (\n                <div className={\"div-block-11 \" + (sent ? \"\" : \"received\")}>\n                    <div>\n                        <div className={\"div-block-10 \" + (sent ? \"\" : \"received\")}>\n                            <figure >\n                                <audio style={{ margin: '10px 5px 5px 10px' }} controls src={msgObj.text}></audio>\n                            </figure>\n                        </div>\n                        <div style={{ marginTop: '-10px' }}>\n                            {msgObj.uid} -- {msgObj.createdAt && msgObj.createdAt.toDate().toLocaleString()}\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div className={\"div-block-11 \"+ (sent ? \"\" : \"received\")}>\n                <div>\n                <div className={\"div-block-10 \"+ (sent ? \"\" : \"received\")}>\n                    <div className=\"text-block-3\">{msgObj.text}</div>\n                </div>\n                <div style={{ marginTop: '-2px' }}>\n                    {msgObj.uid} -- {msgObj.createdAt && msgObj.createdAt.toDate().toLocaleString()}\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MessageText;\n","import React, {Component }  from 'react';\nimport MessageText from './MessageText';\n\n\nclass MessagesList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.bottomRef = React.createRef();\n    }\n    render() {\n        console.log(\"MessagesList\", this.props.messages)\n\n        setTimeout(()=>{\n            console.log(this.bottomRef)\n            this.bottomRef.current && this.bottomRef.current.scrollIntoView({ behavior: 'smooth' })\n        }, 100)\n\n        return (\n            <div style={{ overflow: 'scroll', height: '55vh' }}>\n                {\n                    this.props.messages && this.props.messages.reverse().map(msg => (\n                        <MessageText key={msg.id} message={msg}/>\n                    ))\n                }\n                <span ref={this.bottomRef}></span>\n            </div>\n        )\n    }\n}\n\nexport default MessagesList;\n","import React from 'react';\nimport { ReactMic } from 'react-mic';\n\nimport firebase from 'firebase/app';\n\nexport default class ReactMicComp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false\n        }\n        console.log(ReactMicComp, this)\n        if (!this.state.record) { setTimeout(()=>this.startRecording(), 1) }\n    }\n\n    startRecording = () => {\n        this.setState({ record: true });\n    }\n\n    stopRecording = () => {\n        var self = this\n        self.setState({ record: false });\n        setTimeout(()=>self.setState({ record: false }), 100);\n    }\n\n    onData(recordedBlob) {\n        console.log('chunk of real-time data is: ', recordedBlob);\n    }\n\n    onStop(recordedBlob) {\n        console.log('recordedBlob is: ', recordedBlob, this);\n        this.saveToFirebase(recordedBlob)\n    }\n\n    saveToFirebase(blobObj) {\n        var self = this\n\n        const uid = this.props.meeting.userId;\n\n        return self.props.storageRef.child('uploads/'+uid+'-'+blobObj.stopTime+'.mp3').put(blobObj.blob, {\n            contentType: 'audio/mp3'\n        }).then((resp) => {\n            resp.ref.getDownloadURL().then(downloadUrl => {\n                console.log('audioUpload callback', resp)\n                self.props.messagesRef.add({\n                    text: downloadUrl,\n                    type: 'recording',\n                    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                    uid\n                })\n            })\n\n        })\n    }\n\n    render() {\n        \n        return (\n            <div style={{ width: '100%', height: '100%' }}>\n                <ReactMic\n                    record={this.state.record}\n                    className=\"sound-wave\"\n                    mimeType=\"audio/webm\"\n                    onStop={this.onStop.bind(this)}\n                    autoGainControl={true}\n                    strokeColor=\"#9b9b9b\"\n                    width=\"300\"\n                    backgroundColor=\"#000813\" />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport firebase from 'firebase/app';\nimport ReactMicComp from './ReactMicComp';\n\nclass ChatInputs extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            inputType : 'text',\n            inputValue : ''\n        }\n        this.audioRecRef = React.createRef();\n    }\n\n    sendMessage = async (e) => {\n\n        if (this.state.inputValue === '') return\n\n        e.preventDefault();\n\n        const uid = this.props.meeting.userId;\n\n        await this.props.messagesRef.add({\n            type: 'text',\n            text: this.state.inputValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid\n        })\n\n        // this.setFormValue('');\n        this.state.inputValue = '';\n    }\n\n\n    render() {\n        var self = this;\n        if (this.state.inputType === 'text') {\n            return (<>\n                <form onSubmit={this.sendMessage} className=\"div-block-7\">\n                    <input className=\"text-block-2\" type=\"text\" value={this.state.inputValue} \n                        onChange={(e) => self.setState({inputValue : e.target.value})}  \n                        placeholder=\"Type here...\" aria-describedby=\"button-addon2\" \n                        className=\"form-control rounded-0 border-0 py-4 bg-light\"\n                        style={{\n                            background: 'transparent',\n                            width: '100%',\n                            border: 'none',\n                            color: 'gray',\n                            height: 'min-content'\n                        }}\n                    />\n                    <div className=\"div-block-8\">\n                        <div className=\"div-block-9\" onClick={this.sendMessage}><i className=\"fa fa-send\"></i></div>\n                        <div className=\"div-block-9\" onClick={()=>alert('Not Implemented Yet!')}><i className=\"fa fa-phone\"></i></div>\n                        <div className=\"div-block-9\" onClick={()=>{\n                            self.setState({inputType:'record'});\n                        }}><i className=\"fa fa-bullseye\"></i></div>\n                    </div>\n                </form>\n            </>)\n        } else if (this.state.inputType === 'record') {\n            return (<>\n                <form onSubmit={this.sendMessage} className=\"div-block-7\">\n                    <ReactMicComp ref={this.audioRecRef} meeting={this.props.meeting} storageRef={this.props.storageRef} messagesRef={this.props.messagesRef}/>\n                    <div className=\"div-block-8\">\n                        <div className=\"div-block-9\" onClick={()=>{\n                            console.log(self.audioRecRef && self.audioRecRef.current)\n                            self.audioRecRef.current.stopRecording()\n                            setTimeout(()=>{self.setState({inputType:'text'})}, 100)\n                        }}><i className=\"fa fa-stop\"></i></div>\n                    </div>\n                </form>\n            </>)\n        }\n    }\n}\n\nexport default ChatInputs;\n","import React, { useState } from 'react';\n\n\n// Import & init firebase\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport MessagesList from './MessagesList';\nimport ChatInputs from './ChatInputs';\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCgNBwvWRmiD-XKVVwPlXtfeFgDxrdS1Cc\",\n  authDomain: \"ecse542-whisper.firebaseapp.com\",\n  databaseURL: \"https://ecse542-whisper.firebaseio.com\",\n  projectId: \"ecse542-whisper\",\n  storageBucket: \"ecse542-whisper.appspot.com\",\n  messagingSenderId: \"994712361483\",\n  appId: \"1:994712361483:web:47d47d3f160de1a275450e\",\n  measurementId: \"G-S42HK278KF\"\n})\n\n// const auth = firebase.auth();\nconst firestore = firebase.firestore();\nwindow.firebase = firebase\n// const analytics = firebase.analytics();\n\nfunction ChatRoom(props) {\n    const messagesRef = firestore.collection('messages');\n    const storageRef = firebase.storage().ref();\n    const query = messagesRef.orderBy('createdAt' ,'desc').limit(25);\n\n    var [messages] = useCollectionData(query, { idField: 'id' });\n    console.log('messages',messages)\n    \n\n    return (\n        <div className=\"div-block-2\">\n            <div>\n                <div className=\"div-block-6\">\n                    <div className=\"text-block\">Your Group</div>\n                    <div className=\"text-block less\">Main Chat</div>\n                </div>\n            </div>\n            <div className=\"div-block-5\">\n                <div className=\"w-layout-grid green\">\n                    <div className=\"div-block-3\">\n                        <div className=\"div-block-4 green\">\n                            <div className=\"text-block\">Joseff Padilla</div>\n                        </div>\n                    </div>\n                    <div className=\"div-block-3 hover\">\n                        <div className=\"text-block\"><strong>Private whisper to</strong>Kaiya Bowen</div>\n                    </div>\n                    <div className=\"div-block-3 you\">\n                        <div className=\"div-block-4 green\">\n                            <div className=\"text-block\">Jodi Avery (You)</div>\n                        </div>\n                    </div>\n                    <div className=\"div-block-3\">\n                        <div className=\"div-block-4 green\">\n                            <div className=\"text-block\">Blake Kemp</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <MessagesList messages={messages}/>\n            \n            <ChatInputs meeting={props.meeting} messagesRef={messagesRef} storageRef={storageRef}/>\n        </div>\n    )\n}\n\nexport default ChatRoom;\n","import React, { Component } from 'react';\n\n\nvar JitsiMeetExternalAPI = window.JitsiMeetExternalAPI || {}\nvar MAINVIDEOLOADED = false\n\n\nclass MainJitsi extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        console.log(\"MainJitsi\", this.props)\n                \n        setTimeout(() => {\n            if (!MAINVIDEOLOADED) {\n                MAINVIDEOLOADED = true\n                window.api = new JitsiMeetExternalAPI('meet.jit.si', {\n                    roomName:this.props.meeting.meetingId,\n                    parentNode:document.getElementById('MainJitsi'),\n                    width:'100%', height:'100%', userInfo: {\n                        // email: 'email@jitsiexamplemail.com',\n                        displayName: this.props.meeting.userId\n                    }, configOverwrite: {\n                        prejoinPageEnabled: false,\n                    }})\n            }\n        }, 500)\n\n        return (\n            <div id=\"MainJitsi\"></div>\n        )\n    }\n}\n\nexport default MainJitsi;\n","import React, { Component } from 'react';\n\n// Import Jitsi Stuff\n// import Jitsi from 'react-jitsi'\n\n// Import other App components etc\nimport './App.css';\nimport LandingPage from './components/LandingPage';\nimport ChatRoom from './components/ChatRoom';\nimport MainJitsi from './components/MainJitsi';\nimport './site-styles.css'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 'join'\n    }\n\n    // Change this, for local development, skips the landingpage\n    if (false) {\n      var self = this\n      setTimeout(() => { self.goToMeeting({ 'meetingId': \"whisper-testmeeting-1234\", 'userId': \"testUserId\" }) }, 100)\n    }\n  }\n\n  goToMeeting(meetingObj) {\n    this.setState({ meeting: meetingObj })\n    this.setState({ page: 'meeting' })\n    console.log('App.goToMeeting', meetingObj, this)\n    window.GLOBAL = window.GLOBAL || {}\n    window.GLOBAL.meeting = meetingObj\n  }\n\n  render() {\n    console.log('App.render', this)\n    if (!this.state) return <></>\n    if (this.state.page === 'join') {\n      return <LandingPage goToMeeting={this.goToMeeting.bind(this)} />\n    } else {\n      return (<>\n        <ChatRoom meeting={this.state.meeting} />\n        <div className=\"div-block\">\n          <MainJitsi meeting={this.state.meeting} />\n        </div>\n\n      </>\n      );\n    }\n\n  }\n}\n\nexport default App;\n\n\n\n// Other Helpers \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}