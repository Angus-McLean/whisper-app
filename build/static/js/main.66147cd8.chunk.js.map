{"version":3,"sources":["components/LandingPage.js","components/MessageWhisper.js","components/MessageText.js","components/MessagesList.js","components/ReactMicComp.js","components/ChatInputs.js","components/AttendeesList.js","components/WhisperComp.js","components/ChatRoom.js","components/MainJitsi.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","props","joinMeeting","e","a","preventDefault","console","log","goToMeeting","document","getElementById","value","className","id","onSubmit","this","name","data-name","type","maxLength","placeholder","defaultValue","Date","now","data-wait","Component","JitsiMeetExternalAPI","window","MessageWhisper","state","status","mute","jitsiCallObj","roomName","message","text","parentNode","width","height","userInfo","displayName","configOverwrite","prejoinPageEnabled","startWithAudioMuted","executeCommand","tones","pause","duration","setState","alert","_this","setTimeout","innerHTML","msgObj","sent","uid","GLOBAL","meeting","userId","style","display","alignItems","background","backgroundPosition","onClick","answerCall","bind","createdAt","toDate","toLocaleString","toggleMute","closeCall","MessageText","margin","controls","src","marginTop","toLocaleTimeString","textAlign","MessagesList","bottomRef","React","createRef","current","scrollIntoView","behavior","selectedUser","overflow","messages","reverse","map","msg","key","paddingTop","ref","ReactMicComp","startRecording","record","stopRecording","self","recordedBlob","saveToFirebase","blobObj","storageRef","child","stopTime","put","blob","contentType","then","resp","getDownloadURL","downloadUrl","messagesRef","add","firebase","firestore","FieldValue","serverTimestamp","from","to","mimeType","onStop","autoGainControl","strokeColor","backgroundColor","ChatInputs","sendMessage","inputValue","sendWhisper","whispersRef","inputType","audioRecRef","onChange","target","aria-describedby","border","color","AttendeesList","borderBottom","overflowY","setSelectedUser","attendees","user","WhisperComp","autoAnswered","whisper","doc","update","whisperHeaderHtml","incomingWhipserHtml","backgroundRepeat","snippets","undefined","snipContainerHtml","position","top","borderTop","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","addEventListener","collection","meetingId","delete","ChatRoom","body","mid","meetingRef","set","merge","attendeesRef","storage","useState","useCollectionData","idField","attendessFilt","filter","orderBy","limit","whispers","whispersFilt","w","toMe","fromMe","isClosed","isSeen","isRecent","messagesFilt","m","toEveryone","MAINVIDEOLOADED","MainJitsi","api","App","page","meetingObj","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.66147cd8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass LandingPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.props = props    \n    }\n\n    joinMeeting = async (e) => {\n        e.preventDefault();\n        console.log('LandingPage.joinMeeting',e)\n\n        this.props.goToMeeting({\n            'meetingId':document.getElementById('meetingField').value,\n            'userId':document.getElementById('userField').value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"landing section\">\n                <div className=\"landing text-block-8\">Join Whisper Meeting</div>\n                <div className=\"landing text-block-9\">Video conferencing like they're right beside you..</div>\n                <div className=\"landing form-block w-form\">\n                    <form id=\"email-form\" onSubmit={this.joinMeeting} name=\"email-form\" data-name=\"Email Form\" className=\"landing form\">\n                        <input type=\"text\"\n                            className=\"landing text-field w-input\" maxLength=\"256\" name=\"name\" data-name=\"Name\" placeholder=\"Meeting ID..\"\n                            id=\"meetingField\" defaultValue={\"WhisperMeeting\"+Date.now()%10000}/>\n                        <input type=\"text\"\n                            className=\"landing text-field w-input\" maxLength=\"256\" name=\"name\" data-name=\"Name\" placeholder=\"Your Name..\"\n                            id=\"userField\"/>\n                        <input type=\"submit\" value=\"Join Meeting\" data-wait=\"Please wait...\"\n                            className=\"landing submit-button w-button\" />\n                    </form>\n                    <div className=\"landing w-form-done\">\n                        <div>Thank you! Your submission has been received!</div>\n                    </div>\n                    <div className=\"landing w-form-fail\">\n                        <div>Oops! Something went wrong while submitting the form.</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;\n\n\n\n// Other Helpers \n","import React, {Component} from 'react';\n\nvar JitsiMeetExternalAPI = window.JitsiMeetExternalAPI || {}\n\n\nclass MessageWhisper extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            status : 'closed',\n            mute : false\n        }\n    }\n\n    answerCall() {\n        // alert('Not Implemented Yet! woot')\n\n        this.jitsiCallObj = new JitsiMeetExternalAPI('meet.jit.si', {\n            roomName:this.props.message.text,\n            parentNode:document.getElementById(this.props.message.text),\n            width:'100%', height:'100%', userInfo: {\n                displayName: 'asdfwev'\n            }, configOverwrite: {\n                prejoinPageEnabled: false,\n                startWithAudioMuted: false\n        }})\n        window.jitsiCallObj = this.jitsiCallObj\n        \n        // notify you've entered\n        this.jitsiCallObj.executeCommand('sendTones', { tones: '99', pause: 0, duration:1 });\n\n        this.setState({status:'active'})\n    }\n\n    toggleMute() {\n        alert(this.state.mute)\n    }\n\n    closeCall() {\n        var _this = this\n        this.jitsiCallObj.executeCommand('hangup');\n        setTimeout(() => {\n            document.getElementById(_this.props.message.text).innerHTML = ''\n        }, 100)\n\n        this.setState({status:'closed'})\n    }\n\n    render() {\n        // console.log(this.props.message)\n        var msgObj = this.props.message\n        \n        var sent = msgObj.uid === window.GLOBAL.meeting.userId\n\n        if (this.state.status === 'closed') {\n            return (\n                <div className={\"div-block-11 \" + (sent ? \"\" : \"received\")}>\n                    <div>\n                        <div className={\"div-block-10 \" + (sent ? \"\" : \"received\")}>\n                            {/* Call : {this.state.status} - {msgObj.text} -  */}\n                            <div className=\"text-block-3\">Live Whisper..</div>\n                            <div style={{\n                                display: 'flex',\n                                alignItems: 'center'\n                            }}>\n                                <div style={{\n                                    background: \"url(/whisper-app/images/ellipsis.gif)\",\n                                    backgroundPosition: \"center\",\n                                    height: \"60px\",\n                                    width: \"80%\"\n                                }}></div>\n                                <div className=\"div-block-9\" onClick={this.answerCall.bind(this)}><i className=\"fa fa-phone\"></i></div>\n                            </div>\n                        </div>\n                        <div>\n                            {msgObj.uid} -- {msgObj.createdAt && msgObj.createdAt.toDate().toLocaleString()}\n                        </div>\n                        <div id={msgObj.text} style={{display:'none'}}></div>\n                    </div>\n                </div>\n            )\n        }\n        if (this.state.status === 'active') {\n            return (\n                <div className={\"div-block-11 \" + (sent ? \"\" : \"received\")}>\n                    <div>\n                        <div className={\"div-block-10 \" + (sent ? \"\" : \"received\")} style={{\n                            display: 'flex',\n                            alignItems: 'center'\n                        }}>\n                            <div style={{\n                                background: \"url(/whisper-app/images/audiosoundwave.gif) 50% 50% / contain\",\n                                height: \"60px\",\n                                width: \"80%\"\n                            }}></div>\n                            <div className=\"div-block-9\" onClick={this.toggleMute.bind(this)}><i className=\"fa fa-microphone\"></i></div>\n                            <div className=\"div-block-9\" onClick={this.closeCall.bind(this)}><i className=\"fa fa-times\"></i></div>\n                        </div>\n                        <div>\n                            {msgObj.uid} -- {msgObj.createdAt && msgObj.createdAt.toDate().toLocaleString()}\n                        </div>\n                        <div id={msgObj.text} style={{display:'none'}}></div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default MessageWhisper;\n","import React, {Component} from 'react';\nimport MessageWhisper from './MessageWhisper';\n\nclass MessageText extends Component {\n\n    constructor(props){\n        super(props)\n        // console.log(\"MessageText\", this)\n    }\n\n    render() {\n        var msgObj = this.props.message\n        \n        var sent = msgObj.uid === window.GLOBAL.meeting.userId\n\n        if (msgObj.type === 'recording') {\n            return (\n                <div className={\"div-block-11 \" + (sent ? \"\" : \"received\")}>\n                    <div>\n                        <div className={\"div-block-10 \" + (sent ? \"\" : \"received\")}>\n                            <figure >\n                                <audio style={{ margin: '10px 5px 5px 10px' }} controls src={msgObj.text}></audio>\n                            </figure>\n                        </div>\n                        <div style={{ marginTop: '-10px' }}>\n                            {msgObj.uid} -- {msgObj.createdAt && msgObj.createdAt.toDate().toLocaleTimeString()}\n                        </div>\n                    </div>\n                </div>\n            )\n        } else if (msgObj.type === 'call') {\n            return (\n                <MessageWhisper message={msgObj}/>\n            )\n        } else if (msgObj.type === 'update') {\n            return (<>\n                <div>\n                    <div style={{textAlign:'center'}}>\n                        <div>{msgObj.text}</div>\n                    </div>\n                </div>\n            </>)\n        } else {\n            return (\n                <div className={\"div-block-11 \"+ (sent ? \"\" : \"received\")}>\n                    <div>\n                    <div className={\"div-block-10 \"+ (sent ? \"\" : \"received\")}>\n                        <div className=\"text-block-3\">{msgObj.text}</div>\n                    </div>\n                    <div style={{ marginTop: '-2px' }}>\n                        {msgObj.uid} -- {msgObj.createdAt && msgObj.createdAt.toDate().toLocaleTimeString()}\n                    </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default MessageText;\n","import React, {Component }  from 'react';\nimport MessageText from './MessageText';\n\n\nclass MessagesList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.bottomRef = React.createRef();\n    }\n    render() {\n        // console.log(\"MessagesList\", this.props.messages)\n\n        setTimeout(()=>{\n            // console.log(this.bottomRef)\n            this.bottomRef.current && this.bottomRef.current.scrollIntoView({ behavior: 'smooth' })\n        }, 100)\n\n        return (<>\n            {/* height: '58vh' */}\n            <div className=\"div-block-6\">\n                <div className=\"text-block\">Chat with {this.props.selectedUser}</div>\n            </div>\n            <div style={{ overflow: 'scroll', height: '78vh' }}>\n                \n                {\n                    this.props.messages && this.props.messages.reverse().map(msg => (\n                        <MessageText key={msg.id} message={msg}/>\n                    ))\n                }\n                <div style={{paddingTop:'25vh'}}>\n                    <span ref={this.bottomRef}></span>\n                </div>\n            </div>\n        </>)\n    }\n}\n\nexport default MessagesList;\n","import React from 'react';\nimport { ReactMic } from 'react-mic';\n\nimport firebase from 'firebase/app';\n\nexport default class ReactMicComp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false\n        }\n        console.log(ReactMicComp, this)\n        if (!this.state.record) { setTimeout(()=>this.startRecording(), 1) }\n    }\n\n    startRecording = () => {\n        this.setState({ record: true });\n    }\n\n    stopRecording = () => {\n        var self = this\n        self.setState({ record: false });\n        setTimeout(()=>self.setState({ record: false }), 100);\n    }\n\n    onData(recordedBlob) {\n        console.log('chunk of real-time data is: ', recordedBlob);\n    }\n\n    onStop(recordedBlob) {\n        console.log('recordedBlob is: ', recordedBlob, this);\n        this.saveToFirebase(recordedBlob)\n    }\n\n    saveToFirebase(blobObj) {\n        var self = this\n\n        const uid = this.props.meeting.userId;\n\n        return self.props.storageRef.child('uploads/'+uid+'-'+blobObj.stopTime+'.mp3').put(blobObj.blob, {\n            contentType: 'audio/mp3'\n        }).then((resp) => {\n            resp.ref.getDownloadURL().then(downloadUrl => {\n                console.log('audioUpload callback', resp)\n                self.props.messagesRef.add({\n                    text: downloadUrl,\n                    type: 'recording',\n                    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                    from : uid,\n                    uid,\n                    to : this.props.selectedUser\n                })\n            })\n\n        })\n    }\n\n    render() {\n        \n        return (\n            <div style={{ width: '100%', height: '100%' }}>\n                <ReactMic\n                    record={this.state.record}\n                    className=\"sound-wave\"\n                    mimeType=\"audio/webm\"\n                    onStop={this.onStop.bind(this)}\n                    autoGainControl={true}\n                    strokeColor=\"#9b9b9b\"\n                    width=\"300\"\n                    backgroundColor=\"#000813\" />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport firebase from 'firebase/app';\nimport ReactMicComp from './ReactMicComp';\n\nclass ChatInputs extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            inputType : 'text',\n            inputValue : ''\n        }\n        this.audioRecRef = React.createRef();\n    }\n\n    sendMessage = async (e) => {\n\n        if (this.state.inputValue === '') return\n\n        e.preventDefault();\n\n        const uid = this.props.meeting.userId;\n\n        await this.props.messagesRef.add({\n            type: 'text',\n            text: this.state.inputValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            from : uid,\n            uid,\n            to : this.props.selectedUser\n        })\n\n        this.state.inputValue = '';\n    }\n\n    sendWhisper = async (e) => {\n        // if (this.state.inputValue === '') return\n        // e.preventDefault();\n\n        const uid = this.props.meeting.userId;\n        await this.props.whispersRef.add({\n            from: uid,\n            text: \"whispercall-\"+Date.now(),\n            to: this.props.selectedUser,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            // ['status-'+uid] : 'active'\n        })\n        await this.props.messagesRef.add({\n            type: 'update',\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            from: uid, uid,\n            text: uid + \" started a Whisper with \"+this.props.selectedUser,\n            to: this.props.selectedUser\n        })\n    }\n\n    render() {\n        var self = this;\n        if (this.state.inputType === 'text') {\n            return (<>\n                <form onSubmit={this.sendMessage} className=\"div-block-7\">\n                    <input className=\"text-block-2\" type=\"text\" value={this.state.inputValue} \n                        onChange={(e) => self.setState({inputValue : e.target.value})}  \n                        placeholder=\"Type here...\" aria-describedby=\"button-addon2\" \n                        className=\"form-control rounded-0 border-0 py-4 bg-light\"\n                        style={{\n                            background: 'transparent',\n                            width: '100%',\n                            border: 'none',\n                            color: 'gray',\n                            height: 'min-content'\n                        }}\n                    />\n                    <div className=\"div-block-8\">\n                        <div className=\"div-block-9\" onClick={this.sendMessage}><i className=\"fa fa-send\"></i></div>\n                        <div className=\"div-block-9\" onClick={this.sendWhisper}><i className=\"fa fa-phone\"></i></div>\n                        <div className=\"div-block-9\" onClick={()=>{\n                            self.setState({inputType:'record'});\n                        }}><i className=\"fa fa-bullseye\"></i></div>\n                    </div>\n                </form>\n            </>)\n        } else if (this.state.inputType === 'record') {\n            return (<>\n                <form onSubmit={this.sendMessage} className=\"div-block-7\">\n                    <ReactMicComp ref={this.audioRecRef} meeting={this.props.meeting} \n                        storageRef={this.props.storageRef} \n                        messagesRef={this.props.messagesRef}\n                        selectedUser={this.props.selectedUser}\n                    />\n                    <div className=\"div-block-8\">\n                        <div className=\"div-block-9\" onClick={()=>{\n                            console.log(self.audioRecRef && self.audioRecRef.current)\n                            self.audioRecRef.current.stopRecording()\n                            setTimeout(()=>{self.setState({inputType:'text'})}, 100)\n                        }}><i className=\"fa fa-stop\"></i></div>\n                    </div>\n                </form>\n            </>)\n        }\n    }\n}\n\nexport default ChatInputs;\n","import React, { Component }  from 'react';\nimport MessageText from './MessageText';\n\n\nclass AttendeesList extends Component {\n    \n    constructor(props){\n        super(props)\n    }\n    render() {\n        console.log(\"AttendeesList\", this)\n        var self = this;\n        var uid = window.GLOBAL.meeting.userId\n\n        return (\n            <div className=\"div-block-5\" style={{borderBottom: '1px solid #9b9b9b', height:'15vh', overflowY: \"scroll\"}}>\n                <div className=\"w-layout-grid green\" style={{}}>\n                    <div className={(this.props.selectedUser === uid ? \"selected\":'')+ \" div-block-3\"}\n                        // onClick={()=>{self.props.setSelectedUser(uid)}}\n                    >\n                        <div className=\"div-block-4 green\">\n                            <div className=\"text-block\">{uid} (You)</div>\n                        </div>\n                    </div>\n                    <div className={(this.props.selectedUser === \"Everyone\" ? \"selected\":'')+ \" div-block-3\"}\n                    onClick={()=>{self.props.setSelectedUser(\"Everyone\")}}>\n                        <div className=\"div-block-4 green\">\n                            <div className=\"text-block\">Everyone</div>\n                        </div>\n                    </div>\n                    {\n                        this.props.attendees && this.props.attendees.reverse().map(user => (\n                            <div\n                                className={(this.props.selectedUser === user.userId ? \"selected\":'')+ \" div-block-3\"}\n                                onClick={()=>{self.props.setSelectedUser(user.userId)}}\n                                key={user.userId}>\n                                <div className=\"div-block-4 green\">\n                                    <div className=\"text-block\">{user.userId}</div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AttendeesList;\n","import React, {Component} from 'react';\nimport firebase from 'firebase/app';\n\nvar JitsiMeetExternalAPI = window.JitsiMeetExternalAPI || {}\n\n\nclass WhisperComp extends Component {\n\n    constructor(props){\n        super(props)\n        console.log('WhisperComp', this, props);\n\n        this.state = {\n            // status : 'ringing',\n            // status : this.props.whisper && this.props.whisper['status-'+window.GLOBAL.meeting.userId],\n            mute : false\n        }\n        this.autoAnswered = false\n\n    }\n\n    answerCall() {\n        // alert('Not Implemented Yet! woot')\n\n        this.jitsiCallObj = new JitsiMeetExternalAPI('meet.jit.si', {\n            roomName:this.props.whisper.text,\n            parentNode:document.getElementById('whisper-jitsi-container'),\n            width:'100%', height:'100%', userInfo: {\n                displayName: window.GLOBAL.meeting.userId\n            }, configOverwrite: {\n                prejoinPageEnabled: false,\n                startWithAudioMuted: false\n        }})\n        window.jitsiCallObj = this.jitsiCallObj\n        \n        // notify you've entered\n        this.jitsiCallObj.executeCommand('sendTones', { tones: '99', pause: 0, duration:1 });\n\n        var uid = window.GLOBAL.meeting.userId\n        this.props.messagesRef.add({\n            type: 'update',\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            from: uid, uid,\n            text: uid + \" joined \"+this.props.whisper.from+\"'s Whisper\",\n            to: uid === this.props.whisper.to ? this.props.whisper.from : this.props.whisper.to\n        })\n\n        var _this = this\n        setTimeout(() => {\n            this.props.whispersRef\n                .doc(this.props.whisper.id)\n                .update({['status-'+window.GLOBAL.meeting.userId]:'active'});\n        },100)\n    }\n\n    toggleMute() {\n        // alert(this.state.mute)\n    }\n\n    closeCall() {\n        var _this = this\n        if(this.jitsiCallObj) {this.jitsiCallObj.executeCommand('hangup');}\n        setTimeout(() => {\n            (document.getElementById(\"whisper-jitsi-container\")||{}).innerHTML = '';\n        }, 100)\n\n        var uid = window.GLOBAL.meeting.userId\n        this.props.messagesRef.add({\n            type: 'update',\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            from: uid, uid,\n            text: uid + \" left \"+this.props.whisper.from+\"'s Whisper\",\n            to: this.props.selectedUser\n        })\n\n        this.props.whispersRef\n            .doc(this.props.whisper.id)\n            .update({['status-'+window.GLOBAL.meeting.userId]:'closed'});\n    }\n\n    render() {\n\n        // console.log(this.props.message)\n        // var msgObj = this.props.message\n        // var sent = msgObj.uid === window.GLOBAL.meeting.userId\n        console.log('WhisperComp.render', this)\n        if (!this.props.whisper) { return <></> }\n        \n        var uid = window.GLOBAL.meeting.userId\n        if (this.props.whisper.from === uid && !this.autoAnswered && (this.props.whisper['status-'+uid]=='ringing' || !this.props.whisper['status-'+uid])){\n            var self = this\n            this.autoAnswered = true\n            setTimeout(()=>self.answerCall(), 0)\n        }\n\n        const whisperHeaderHtml = (\n            <div className=\"div-block-4 green\" style={{margin: \"20px\"}}>\n                <div className=\"div-block-4 green\" style={{width: \"fit-content\"}}>\n                    <div className=\"text-block\">\n                        <div className=\"div-block-4 green\">\n                            <div className=\"text-block\">Whispering with {\n                                this.props.whisper.from === window.GLOBAL.meeting.userId ? \n                                this.props.whisper.to : this.props.whisper.from\n                            }</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n        const incomingWhipserHtml = (<>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center'\n            }}>\n                <div style={{\n                    background: \"url(/whisper-app/images/ellipsis.gif)\",\n                    backgroundPosition: \"center\",\n                    backgroundRepeat:'no-repeat',\n                    height: '2vh', width: \"80%\"\n                }}></div>\n                <div className=\"div-block-9\" onClick={this.answerCall.bind(this)}><i className=\"fa fa-phone\"></i></div>\n                <div className=\"div-block-9\" onClick={this.closeCall.bind(this)}><i className=\"fa fa-times\"></i></div>\n            </div>\n        </>)\n\n        const activeWhisperHtml = (<>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center'\n            }}>\n                <div style={{\n                    background: \"url(/whisper-app/images/audiosoundwave.gif) 50% 50% / cover\",\n                    backgroundRepeat:'no-repeat',\n                    // height: \"60px\",\n                    height: '2vh', width: \"80%\"\n                }}></div>\n                {/* <div className=\"div-block-9\" onClick={this.toggleMute.bind(this)}><i className=\"fa fa-microphone\"></i></div> */}\n                <div className=\"div-block-9\" onClick={this.closeCall.bind(this)}><i className=\"fa fa-times\"></i></div>\n            </div>\n        </>)\n\n        var snippets = {\n            'ringing': incomingWhipserHtml,\n            undefined : incomingWhipserHtml,\n            'active': activeWhisperHtml\n        }\n        \n        const snipContainerHtml = <>\n            <div id=\"incomingCalls\" style={{\n                position: \"fixed\", top: \"78%\", height: \"25vh\", width: \"inherit\",\n                borderTop: '1px solid #9b9b9b', background: 'inherit'\n            }}>\n                <div>\n                    {whisperHeaderHtml}\n                    {/* <div className=\"text-block-3\">Live Whisper..</div> */}\n                    {snippets[\n                        this.props.whisper && this.props.whisper['status-'+window.GLOBAL.meeting.userId]\n                    ]}\n                    {/* {this.state.status === 'active' ? activeWhisperHtml : incomingWhipserHtml} */}\n                </div>\n                <div id='whisper-jitsi-container' style={{display:'none'}}></div>\n            </div>\n        </>\n\n        return (<>\n            {snipContainerHtml}\n        </>)\n    }\n}\n\nexport default WhisperComp;\n","import React, { useState } from 'react';\n\n\n// Import & init firebase\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport MessagesList from './MessagesList';\nimport ChatInputs from './ChatInputs';\nimport AttendeesList from './AttendeesList';\nimport WhisperComp from './WhisperComp';\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCgNBwvWRmiD-XKVVwPlXtfeFgDxrdS1Cc\",\n  authDomain: \"ecse542-whisper.firebaseapp.com\",\n  databaseURL: \"https://ecse542-whisper.firebaseio.com\",\n  projectId: \"ecse542-whisper\",\n  storageBucket: \"ecse542-whisper.appspot.com\",\n  messagingSenderId: \"994712361483\",\n  appId: \"1:994712361483:web:47d47d3f160de1a275450e\",\n  measurementId: \"G-S42HK278KF\"\n})\n\n// const auth = firebase.auth();\nconst firestore = firebase.firestore();\nwindow.firebase = firebase\n// const analytics = firebase.analytics();\n\nwindow.addEventListener(\"beforeunload\", function() {\n    setTimeout(()=>{firestore.collection('meetings')\n        .doc(window.GLOBAL.meeting.meetingId)\n        .collection('attendees').doc(window.GLOBAL.meeting.userId)\n        .delete()\n    }, 1)\n    // return \"asdf\"\n})\n\nfunction ChatRoom(props) {\n\n    document.body.style.background = '#000813'\n\n    var mid = (props ? props.meeting.meetingId : window.GLOBAL.meeting.meetingId)\n    var uid = (props ? props.meeting.userId : window.GLOBAL.meeting.userId)\n    // var [attendees, attendeesRef, messages, messagesRef, storageRef] = connectToSources(mid, uid);\n    \n    var meetingRef = firestore.collection('meetings').doc(mid)\n    meetingRef.set({ meetingId: mid }, {merge: true});\n    \n    const messagesRef = meetingRef.collection('messages');\n    const whispersRef = meetingRef.collection('whispers');\n    const attendeesRef = meetingRef.collection('attendees');\n    const storageRef = firebase.storage().ref();\n    \n    var [selectedUser, setSelectedUser] = useState('Everyone')\n\n    console.log('ChatRoom', props, meetingRef)\n    \n    // update attendees\n    attendeesRef.doc(uid).set({\n        userId: uid\n    }, { merge: true })\n    var [attendees] = useCollectionData(attendeesRef, { idField: 'id' });\n    var attendessFilt = attendees ? attendees.filter(a => a.userId !== uid) : []\n    var [whispers] = useCollectionData(whispersRef\n        .orderBy('createdAt', 'desc')\n        .limit(10),{ idField: 'id' }\n    );\n    var whispersFilt = whispers ? whispers.filter(w => {\n        var toMe = (w.to === uid) | (w.to === \"Everyone\")\n        var fromMe = w.from === uid\n        var isClosed = w['status-'+uid] === 'closed'\n        var isSeen = !!w['status-'+uid]\n        var isRecent =  w.createdAt ? (Date.now() - w.createdAt.toDate()) < 1e5 : false\n        return !isClosed && (toMe || fromMe) && (isRecent || isSeen)\n    }).reverse() : []\n\n    // Fetch messages\n    var [messages] = useCollectionData(\n        messagesRef.orderBy('createdAt', 'desc').limit(25),\n        { idField: 'id' }\n    );\n    var messagesFilt = messages ? messages.filter(m => {\n        var fromMe = m.from===uid && m.to===selectedUser\n        var toMe = m.to===uid && m.from===selectedUser\n        var toEveryone = m.to==='Everyone' && selectedUser==='Everyone'\n        return fromMe || toMe || toEveryone\n    }) : []\n\n    console.log('ChatRoom', props, meetingRef)\n\n    return (\n        <div className=\"div-block-2\">\n            <div>\n                <div className=\"div-block-6\">\n                    <div className=\"text-block\">Whisper Meeting Attendees</div>\n                    {/* <div className=\"text-block less\">Main Chat</div> */}\n                </div>\n            </div>\n            <AttendeesList attendees={attendessFilt} selectedUser={selectedUser} setSelectedUser={setSelectedUser}/>\n            <MessagesList messages={messagesFilt} selectedUser={selectedUser} height={'15vh'}/>\n            <WhisperComp whispersRef={whispersRef} \n                whisper={whispersFilt[0]} \n                messagesRef={messagesRef} \n                selectedUser={selectedUser}></WhisperComp>\n            <ChatInputs meeting={props.meeting} \n                whispersRef={whispersRef} \n                messagesRef={messagesRef} \n                storageRef={storageRef}\n                selectedUser={selectedUser}\n            />\n        </div>\n    )\n}\n\nexport default ChatRoom;\n","import React, { Component } from 'react';\n\n\nvar JitsiMeetExternalAPI = window.JitsiMeetExternalAPI || {}\nvar MAINVIDEOLOADED = false\n\n\nclass MainJitsi extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        // console.log(\"MainJitsi\", this.props)\n                \n        setTimeout(() => {\n            if (!MAINVIDEOLOADED) {\n                MAINVIDEOLOADED = true\n                window.api = new JitsiMeetExternalAPI('meet.jit.si', {\n                    roomName:this.props.meeting.meetingId,\n                    parentNode:document.getElementById('MainJitsi'),\n                    width:'100%', height:'100%', userInfo: {\n                        // email: 'email@jitsiexamplemail.com',\n                        displayName: this.props.meeting.userId\n                    }, configOverwrite: {\n                        prejoinPageEnabled: false,\n                    }})\n            }\n        }, 500)\n\n        return (\n            <div id=\"MainJitsi\"></div>\n        )\n    }\n}\n\nexport default MainJitsi;\n","import React, { Component } from 'react';\n\n// Import Jitsi Stuff\n// import Jitsi from 'react-jitsi'\n\n// Import other App components etc\nimport './App.css';\nimport LandingPage from './components/LandingPage';\nimport ChatRoom from './components/ChatRoom';\nimport MainJitsi from './components/MainJitsi';\nimport './site-styles.css'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 'join'\n    }\n\n    // Change this, for local development, skips the landingpage\n    if (false) {\n      var self = this\n      setTimeout(() => { self.goToMeeting({ 'meetingId': \"whisper-testmeeting-1234\", 'userId': \"testUserId\" }) }, 100)\n    }\n  }\n\n  goToMeeting(meetingObj) {\n    this.setState({ meeting: meetingObj })\n    this.setState({ page: 'meeting' })\n    console.log('App.goToMeeting', meetingObj, this)\n    window.GLOBAL = window.GLOBAL || {}\n    window.GLOBAL.meeting = meetingObj\n  }\n\n  render() {\n    // console.log('App.render', this)\n    if (!this.state) return <></>\n    if (this.state.page === 'join') {\n      return <LandingPage goToMeeting={this.goToMeeting.bind(this)} />\n    } else {\n      return (<>\n        <ChatRoom meeting={this.state.meeting} />\n        <div className=\"div-block\">\n          <MainJitsi meeting={this.state.meeting} />\n        </div>\n\n      </>\n      );\n    }\n\n  }\n}\n\nexport default App;\n\n\n\n// Other Helpers \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}